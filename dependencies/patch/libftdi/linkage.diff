diff --git a/ftdipp/CMakeLists.txt b/ftdipp/CMakeLists.txt
index 360a831..1190c92 100644
--- a/ftdipp/CMakeLists.txt
+++ b/ftdipp/CMakeLists.txt
@@ -10,23 +10,30 @@ include_directories(BEFORE ${CMAKE_CURRENT_BINARY_DIR}

 include_directories(${Boost_INCLUDE_DIRS})

-# Shared library
-add_library(ftdipp1 SHARED ${cpp_sources})
+if(WIN32)
+  set(SHAREDLIBS OFF)
+  set(STATICLIBS ON)
+endif()

-math(EXPR VERSION_FIXUP "${MAJOR_VERSION} + 1")    # Compatibility with previous releases
-set_target_properties(ftdipp1 PROPERTIES VERSION ${VERSION_FIXUP}.${MINOR_VERSION}.0 SOVERSION 3)
+if( SHAREDLIBS )
+  # Shared library
+  add_library(ftdipp1 SHARED ${cpp_sources})

-# Prevent clobbering each other during the build
-set_target_properties(ftdipp1 PROPERTIES CLEAN_DIRECT_OUTPUT 1)
+  math(EXPR VERSION_FIXUP "${MAJOR_VERSION} + 1")    # Compatibility with previous releases
+  set_target_properties(ftdipp1 PROPERTIES VERSION ${VERSION_FIXUP}.${MINOR_VERSION}.0 SOVERSION 3)

-# Dependencies
-target_link_libraries(ftdipp1 ftdi1 ${LIBUSB_LIBRARIES} ${BOOST_LIBRARIES})
+  # Prevent clobbering each other during the build
+  set_target_properties(ftdipp1 PROPERTIES CLEAN_DIRECT_OUTPUT 1)

-install ( TARGETS ftdipp1
-          RUNTIME DESTINATION bin
-          LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-          ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-)
+  # Dependencies
+  target_link_libraries(ftdipp1 ftdi1 ${LIBUSB_LIBRARIES} ${BOOST_LIBRARIES})
+
+  install ( TARGETS ftdipp1
+            RUNTIME DESTINATION bin
+            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+  )
+endif()

 # Static library
 if ( STATICLIBS )
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index e145af1..0ce799a 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -21,22 +21,24 @@ configure_file(ftdi_version_i.h.in "${CMAKE_CURRENT_BINARY_DIR}/ftdi_version_i.h
 set(c_sources     ${CMAKE_CURRENT_SOURCE_DIR}/ftdi.c ${CMAKE_CURRENT_SOURCE_DIR}/ftdi_stream.c CACHE INTERNAL "List of c sources" )
 set(c_headers     ${CMAKE_CURRENT_SOURCE_DIR}/ftdi.h CACHE INTERNAL "List of c headers" )

-add_library(ftdi1 SHARED ${c_sources})
+if( SHAREDLIBS )
+  add_library(ftdi1 SHARED ${c_sources})

-math(EXPR VERSION_FIXUP "${MAJOR_VERSION} + 1")    # Compatibility with previous releases
-set_target_properties(ftdi1 PROPERTIES VERSION ${VERSION_FIXUP}.${MINOR_VERSION}.0 SOVERSION 2)
-# Prevent clobbering each other during the build
-set_target_properties ( ftdi1 PROPERTIES CLEAN_DIRECT_OUTPUT 1 )
+  math(EXPR VERSION_FIXUP "${MAJOR_VERSION} + 1")    # Compatibility with previous releases
+  set_target_properties(ftdi1 PROPERTIES VERSION ${VERSION_FIXUP}.${MINOR_VERSION}.0 SOVERSION 2)
+  # Prevent clobbering each other during the build
+  set_target_properties ( ftdi1 PROPERTIES CLEAN_DIRECT_OUTPUT 1 )


-# Dependencies
-target_link_libraries(ftdi1 ${LIBUSB_LIBRARIES})
+  # Dependencies
+  target_link_libraries(ftdi1 ${LIBUSB_LIBRARIES})

-install ( TARGETS ftdi1
-          RUNTIME DESTINATION bin
-          LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-          ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-)
+  install ( TARGETS ftdi1
+            RUNTIME DESTINATION bin
+            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+  )
+endif()

 if ( STATICLIBS )
   add_library(ftdi1-static STATIC ${c_sources})
