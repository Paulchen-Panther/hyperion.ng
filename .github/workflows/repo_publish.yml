name: Publish DEB/RPM packages to APT/DNF Repository

on:
  # Reusable from nightly.yml and push_pull.yml
  workflow_call:
    inputs:
      nightly:
        type: boolean
        description: Nightly build
        default: false
        required: false
      publish:
        type: boolean
        description: Publish packages
        default: false
        required: false

jobs:
  publish:
    name: ðŸš€ Publish
    # if: ${{ startsWith(github.repository, 'hyperion-project') && inputs.publish }}
    runs-on: ubuntu-latest
    container:
      image: fedora
    steps:
      - name: ðŸ”§ Install Dependencies
        shell: bash
        run: dnf install git gnupg2 reprepro createrepo rpm-sign -y

      - name: â¬‡ Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.head_sha || github.event.client_payload.head_sha }}

      - name: ðŸ”‘ GPG Import
        if: ${{ env.SECRET_GPG_KEY != null }}
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_KEY }}
        env:
          SECRET_GPG_KEY: ${{ secrets.GPG_KEY }}

      - name: ðŸ’¾ Artifact download
        uses: actions/download-artifact@v3

      - name: ðŸ”§ Prepare DEB/RPM Upload
        if: ${{ env.SECRET_APT_REPO_NIGHTLY != null && env.SECRET_APT_REPO != null && env.SECRET_DNF_REPO_NIGHTLY != null && env.SECRET_DNF_REPO != null }}
        shell: bash
        run: |
          set -x
          echo '::group::[APT] Create initial structure and include artifacts into package source'
            DEB_PACKAGES=$(ls -1q artifact/hyperion_*.deb 2>/dev/null | wc -l)
            if [ "$DEB_PACKAGES" -gt 0 ]; then
              mkdir -p deb/{conf,dists,db}
              cp debian/distributions deb/conf/distributions
              if [[ "${{ inputs.nightly }}" = true ]]; then
                touch "deb/$(git rev-parse --short HEAD)"
              fi
              reprepro -Vb deb createsymlinks
              reprepro -Vb deb export
              for file in artifact/hyperion_*.deb; do
                if [ -f "$file" ]; then
                  dist=${file#*~}
                  dist=${dist%_*}
                  reprepro -Vb deb/ includedeb "$dist" "$file"
                fi
              done
            fi
          echo '::endgroup::'

          echo '::group::[DNF] Make folders, sign/copy packages and create metadata/manifest files'
            RPM_PACKAGES=$(ls -1q artifact/hyperion-*.rpm 2>/dev/null | wc -l)
            if [ "$RPM_PACKAGES" -gt 0 ]; then
              mkdir rpm/
              gpg --armor --output hyperion.pub.key --export 'admin@hyperion-project.org'
              rpm --import hyperion.pub.key
              channel=$([ "${{ inputs.nightly }}" = true ] && echo "Nightly" || echo "Stable")
              declare -A distArray=([fc]=fedora [el]=rhel)
              for file in artifact/hyperion-*.rpm; do
                if [ -f "$file" ]; then
                  dist_ver_arch=$(basename -- "$file")
                  dist_ver_arch=${dist_ver_arch%.*}
                  dist_ver=${dist_ver_arch%.*}
                  dist_ver=${dist_ver##*.}
                  [ -z "${dist_ver:0:2}" ] && continue
                  rpm=rpm/${distArray[${dist_ver:0:2}]}/${dist_ver:2}/${dist_ver_arch##*.}
                  mkdir -p $rpm/ && cp $file $rpm/
                  rpm --define "_gpg_name ${{ steps.import_gpg.outputs.keyid }}" --addsign $rpm/*.rpm
                  rpm --checksig $rpm/*.rpm
                  createrepo $rpm/
                  gpg --yes --detach-sign --armor $rpm/repodata/repomd.xml
                  sed -r "s/@CHANNEL@/${channel}/g; s/@DIST@/${distArray[${dist_ver:0:2}]}/g; s/@ARCH@/${dist_ver_arch##*.}/g" ${GITHUB_WORKSPACE}/rpmbuild/hyperion.repo.in > rpm/${distArray[${dist_ver:0:2}]}/hyperion.repo
                fi
              done
            fi
          echo '::endgroup::'

          echo '::group::[APT/DNF] Set server directory'
            if [[ "${{ inputs.nightly }}" = true ]]; then
              [ "$DEB_PACKAGES" -gt 0 ] && echo "APT_SERVER_DIR=${{ secrets.APT_REPO_NIGHTLY }}" >> $GITHUB_ENV
              [ "$RPM_PACKAGES" -gt 0 ] && echo "DNF_SERVER_DIR=${{ secrets.DNF_REPO_NIGHTLY }}" >> $GITHUB_ENV
            else
              [ "$DEB_PACKAGES" -gt 0 ] && echo "APT_SERVER_DIR=${{ secrets.APT_REPO }}" >> $GITHUB_ENV
              [ "$RPM_PACKAGES" -gt 0 ] && echo "DNF_SERVER_DIR=${{ secrets.DNF_REPO }}" >> $GITHUB_ENV
            fi
          echo '::endgroup::'
        env:
          SECRET_APT_REPO_NIGHTLY: ${{ secrets.APT_REPO_NIGHTLY }}
          SECRET_APT_REPO: ${{ secrets.APT_REPO }}
          SECRET_DNF_REPO_NIGHTLY: ${{ secrets.DNF_REPO_NIGHTLY }}
          SECRET_DNF_REPO: ${{ secrets.DNF_REPO }}

      - name: ðŸ“¦ DEB Upload
        if: ${{ env.SECRET_REPO_USER != null && env.SECRET_REPO_PASSWORD != null && env.APT_SERVER_DIR != null }}
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: releases.hyperion-project.org
          username: ${{ secrets.REPO_USER }}
          password: ${{ secrets.REPO_PASSWORD }}
          server-dir: ${{ env.APT_SERVER_DIR }}
          local-dir: ./deb/
          dangerous-clean-slate: true
        env:
          SECRET_REPO_USER: ${{ secrets.REPO_USER }}
          SECRET_REPO_PASSWORD: ${{ secrets.REPO_PASSWORD }}

      - name: ðŸ“¦ RPM Upload
        if: ${{ env.SECRET_REPO_USER != null && env.SECRET_REPO_PASSWORD != null && env.DNF_SERVER_DIR != null }}
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: releases.hyperion-project.org
          username: ${{ secrets.REPO_USER }}
          password: ${{ secrets.REPO_PASSWORD }}
          server-dir: ${{ env.DNF_SERVER_DIR }}
          local-dir: ./rpm/
          dangerous-clean-slate: true
        env:
          SECRET_REPO_USER: ${{ secrets.REPO_USER }}
          SECRET_REPO_PASSWORD: ${{ secrets.REPO_PASSWORD }}

      - name: ðŸ§¹ Cleanup
        uses: geekyeggo/delete-artifact@v2
        with:
          failOnError: false
