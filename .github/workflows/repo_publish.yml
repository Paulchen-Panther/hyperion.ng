name: Publish DEB/RPM packages to APT/DNF Repository

on:
  # Reusable from nightly.yml and push_pull.yml
  workflow_call:
    inputs:
      nightly:
        type: boolean
        description: Nightly build
        default: false
        required: false
      publish:
        type: boolean
        description: Publish packages
        default: false
        required: false
      container:
        type: string
        description: Docker container for publishing DEB or RPM packages
        default: "ubuntu"
        required: false

jobs:
  publish:
    name: ðŸš€ Publish
    # if: ${{ startsWith(github.repository, 'hyperion-project') && inputs.publish }}
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.container }}
    steps:
      - name: ðŸ”§ Install Dependencies
        shell: bash
        run: |
          if [[ "${{ inputs.container }}" = "ubuntu" ]]; then
            apt-get update && apt-get -y install git gnupg2 reprepro
          elif [[ "${{ inputs.container }}" = "fedora" ]]; then
            dnf install git gnupg2 createrepo rpm-sign -y
          fi

      - name: â¬‡ Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.head_sha || github.event.client_payload.head_sha }}

      - name: ðŸ”‘ GPG Import
        if: ${{ env.SECRET_GPG_KEY != null }}
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_KEY }}
        env:
          SECRET_GPG_KEY: ${{ secrets.GPG_KEY }}

      - name: ðŸ’¾ Artifact download
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.container }}

      - name: ðŸ”§ Prepare DEB Upload
        if: ${{ inputs.container == 'ubuntu' && env.SECRET_APT_REPO_NIGHTLY != null && env.SECRET_APT_REPO != null }}
        shell: bash
        run: |
          echo '::group::Create initial structure'
            mkdir -p deb/{conf,dists,db}
            ls
            cp debian/distributions deb/conf/distributions
            if [[ "${{ inputs.nightly }}" = true ]]; then
              touch "deb/$(git rev-parse --short HEAD)"
            fi
            reprepro -Vb deb createsymlinks
            reprepro -Vb deb export
          echo '::endgroup::'

          echo '::group::Include artifacts into the package source'
            for file in artifact/hyperion_*.deb; do
              if [ -f "$file" ]; then
                dist=${file#*~}
                dist=${dist%_*}
                reprepro -Vb deb/ includedeb "$dist" "$file"
              fi
            done

          echo '::group::Set server directory'
            if [[ "${{ inputs.nightly }}" = true ]]; then
              echo "SERVER_DIR=${{ secrets.APT_REPO_NIGHTLY }}" >> $GITHUB_ENV
            else
              echo "SERVER_DIR=${{ secrets.APT_REPO }}" >> $GITHUB_ENV
            fi
            echo "LOCAL_DIR=./deb/" >> $GITHUB_ENV
          echo '::endgroup::'
        env:
          SECRET_APT_REPO_NIGHTLY: ${{ secrets.APT_REPO_NIGHTLY }}
          SECRET_APT_REPO: ${{ secrets.APT_REPO }}

      - name: ðŸ”§ Prepare RPM Upload
        if: ${{ inputs.container == 'fedora' && env.SECRET_DNF_REPO_NIGHTLY != null && env.SECRET_DNF_REPO != null }}
        shell: bash
        run: |
          echo '::group::Make folders, sign/copy packages and create metadata/manifest files'
            mkdir rpm/
            gpg --armor --output hyperion.pub.key --export 'admin@hyperion-project.org'
            rpm --import hyperion.pub.key
            channel=$([ "${{ inputs.nightly }}" = true ] && echo "Nightly" || echo "Stable")
            declare -A distArray=([fc]=fedora [el]=rhel)
            for file in artifact/hyperion-*.rpm; do
              if [ -f "$file" ]; then
                dist_ver_arch=$(basename -- "$file")
                dist_ver_arch=${dist_ver_arch%.*}
                dist_ver=${dist_ver_arch%.*}
                dist_ver=${dist_ver##*.}
                [ -z "${dist_ver:0:2}" ] && continue
                rpm=rpm/${distArray[${dist_ver:0:2}]}/${dist_ver:2}/${dist_ver_arch##*.}
                mkdir -p $rpm/ && cp $file $rpm/
                rpm --define "_gpg_name ${{ steps.import_gpg.outputs.keyid }}" --addsign $rpm/*.rpm
                rpm --checksig $rpm/*.rpm
                createrepo $rpm/
                gpg --yes --detach-sign --armor $rpm/repodata/repomd.xml
                sed -r "s/@CHANNEL@/${channel}/g; s/@DIST@/${distArray[${dist_ver:0:2}]}/g; s/@ARCH@/${dist_ver_arch##*.}/g" ${GITHUB_WORKSPACE}/rpmbuild/hyperion.repo.in > rpm/${distArray[${dist_ver:0:2}]}/hyperion.repo
              fi
            done
          echo '::endgroup::'

          echo '::group::Set server directory'
            if [[ "${{ inputs.nightly }}" = true ]]; then
              echo "SERVER_DIR=${{ secrets.DNF_REPO_NIGHTLY }}" >> $GITHUB_ENV
            else
              echo "SERVER_DIR=${{ secrets.DNF_REPO }}" >> $GITHUB_ENV
            fi
            echo "LOCAL_DIR=./rpm/" >> $GITHUB_ENV
          echo '::endgroup::'
        env:
          SECRET_DNF_REPO_NIGHTLY: ${{ secrets.DNF_REPO_NIGHTLY }}
          SECRET_DNF_REPO: ${{ secrets.DNF_REPO }}

      - name: ðŸ“¦ Upload
        if: ${{ env.SECRET_REPO_USER != null && env.SECRET_REPO_PASSWORD != null && env.SERVER_DIR != null && env.LOCAL_DIR != null }}
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: releases.hyperion-project.org
          username: ${{ secrets.REPO_USER }}
          password: ${{ secrets.REPO_PASSWORD }}
          server-dir: ${{ env.SERVER_DIR }}
          local-dir: ${{ env.LOCAL_DIR }}
          dangerous-clean-slate: true
        env:
          SECRET_REPO_USER: ${{ secrets.REPO_USER }}
          SECRET_REPO_PASSWORD: ${{ secrets.REPO_PASSWORD }}

      - name: ðŸ§¹ Cleanup
        uses: geekyeggo/delete-artifact@v2
        with:
          name: ${{ inputs.container }}
          failOnError: false
