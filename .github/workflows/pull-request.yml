name: Hyperion PR Build
on:
  pull_request:
    branches:
      - master

jobs:

################################################################
###### Hyperion-Bot comment on open or synchronized PR #########
################################################################

  comment_pr:
    runs-on: ubuntu-latest
    name: Create PR comment
    steps:
      - name: Checkout
        if: success() && github.event_name == 'pull_request' && github.ref == 'refs/heads/master' && (github.event.action == 'opened' || github.event.action == 'synchronize')
        uses: actions/checkout@v1

      - name: Opened
        if: success() && github.event_name == 'pull_request' && github.ref == 'refs/heads/master' && github.event.action == 'opened'
        uses: peter-evans/create-or-update-comment@v1.0.0
        with:
          token: ${{ secrets.HYPERION_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ---
            Hello ${{ github.event.pull_request.user.login }} :wave:

            I'm your friendly neighborhood bot and would like to say thank you for
            submitting a pull request to Hyperion!

            To help you and other users test your changes faster,
            see [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for finished workflow artifacts.

            If you make changes to your PR, i create a new link to your finished
            workflow artifacts for each commit.

            Best regards,
            Hyperion-Bot

      - name: Synchronized
        if: success() && github.event_name == 'pull_request' && github.ref == 'refs/heads/master' && github.event.action == 'synchronize'
        uses: peter-evans/create-or-update-comment@v1.0.0
        with:
          token: ${{ secrets.HYPERION_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            I have a new link to your workflow artifacts for your:
            [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

######################
###### Linux #########
######################

  Linux:
    name: ${{ matrix.dockerName }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerTag: [ amd64, i386, armv6hf, armv7hf, aarch64 ]
        include:
          - dockerTag: amd64
            dockerName: Debian Stretch (AMD64)
            platform: x11
          - dockerTag: i386
            dockerName: Debian Stretch (i386)
            platform: x11
          - dockerTag: armv6hf
            dockerName: Debian Stretch (Raspberry Pi v1 & ZERO)
            platform: rpi
          - dockerTag: armv7hf
            dockerName: Debian Stretch (Raspberry Pi 2 & 3)
            platform: rpi
          - dockerTag: aarch64
            dockerName: Debian Stretch (Generic AARCH64)
            platform: amlogic

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true

      # Append PR number to version
      - name: Append PR number to version
        shell: bash
        run: 'echo -n -PR#${{ github.event.pull_request.number }} >> version'

      # Build packages
      - name: Build packages
        env:
          DOCKER_TAG: ${{ matrix.dockerTag }}
          DOCKER_NAME: ${{ matrix.dockerName }}
          PLATFORM: ${{ matrix.platform }}
        shell: bash
        run: ./.ci/ci_build.sh

      # Collecting deployable artifacts
      - name: Collecting deployable artifacts
        shell: bash
        run: |
          mkdir -p ${{ matrix.dockerTag }}
          mv deploy/*.tar.gz ${{ matrix.dockerTag }}

      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.dockerTag }}.zip
          path: ${{ matrix.dockerTag }}

######################
###### macOS #########
######################

  macOS:
    name: macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true

      # Append PR number to version
      - name: Append PR number to version
        shell: bash
        run: echo -n "-PR#${{ github.event.pull_request.number }}" >> version

      # Install dependencies
      - name: Install dependencies
        shell: bash
        run: ./.ci/ci_install.sh

      # Build packages
      - name: Build packages
        env:
          PLATFORM: osx
        shell: bash
        run: ./.ci/ci_build.sh

      # Collecting deployable artifacts
      - name: Collecting deployable artifacts
        shell: bash
        run: |
          mkdir -p macOS
          mv build/*.tar.gz macOS

      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: macOS.zip
          path: macOS
