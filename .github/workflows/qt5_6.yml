name: GitHub Qt5/6 Builds

on:
  # Reusable from push_pull.yml
  workflow_call:
    inputs:
      qt_version:
        type: string
        description: Build with this Qt version
        default: '5'
        required: false
      event_name:
        type: string
        description: The event name
        default: ''
        required: false
      pull_request_number:
        type: string
        description: The corresponding PR number
        default: ''
        required: false
      publish:
        type: boolean
        description: Package publishing
        default: false
        required: false

env:
  ghcr: hyperion-project

jobs:

######################
###### macOS #########
######################

  macOS:
    name: üçè macOS x64
    runs-on: macos-latest
    env:
      PYTHON_VERSION: 3.12
      LIBJPEG_TURBO_VERSION: 3.0.1
    strategy:
      fail-fast: false
      matrix:
        arch: ['x86_64', 'arm64']
    steps:
      - name: ‚¨á Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Python
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          allow-prereleases: true
          check-latest: true

      - name: üì• Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ inputs.qt_version == '6' && '6.6.0' || '5.15.2' }}
          host: mac
          target: 'desktop'
          arch: 'clang_64'
          modules: ${{ inputs.qt_version == '6' && 'qtserialport' || '' }}
          cache: 'true'
          cache-key-prefix: macOS-${{ matrix.arch }}-Qt-${{ env.QT_VERSION }}
          set-env: true

      - name: üîß Prepare
        shell: bash
        run: |
          echo '::group::Append PR number to version (PR  only)'
            if [[ "${{ inputs.event_name }}" = "pull_request" ]]; then
              tr -d '\n' < .version > temp && mv temp .version
              echo -n "+PR${{ inputs.pull_request_number }}" >> .version
            fi
          echo '::endgroup::'

          echo '::group::Update/Install dependencies'
            brew untap --force homebrew/core homebrew/cask
            brew update || true
            brew install cmake ninja vulkan-headers || true
            mkdir $HOME/libjpeg-turbo-dmg
            pushd $HOME/libjpeg-turbo-dmg
            wget --no-check-certificate https://github.com/libjpeg-turbo/libjpeg-turbo/releases/download/$LIBJPEG_TURBO_VERSION/libjpeg-turbo-$LIBJPEG_TURBO_VERSION.dmg
            hdid libjpeg-turbo-$LIBJPEG_TURBO_VERSION.dmg
            sudo installer -pkg /Volumes/libjpeg-turbo-$LIBJPEG_TURBO_VERSION/libjpeg-turbo.pkg -target /
            hdiutil detach /Volumes/libjpeg-turbo-$LIBJPEG_TURBO_VERSION
            rm *.dmg
            popd
            rmdir $HOME/libjpeg-turbo-dmg
          echo '::endgroup::'

      - name: üë∑ Build
        shell: bash
        run: ./.github/scripts/build.sh
        env:
          PLATFORM: osx
          OSX_ARCHITECTURE: ${{ matrix.arch }}

      - name: üì¶ Upload
        # if: ${{ inputs.publish || inputs.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.event_name == 'pull_request' && env.NAME || 'artifact' }}
          path: 'build/Hyperion-*'
        env:
          NAME: ${{ inputs.qt_version == '6' && 'macOS_${{ matrix.arch }}_qt6' || 'macOS_${{ matrix.arch }}' }}
