name: Qt 6 (Testing)

on:
  workflow_call:
    inputs:
      event_name:
        type: string
        description: The event name of the parent caller
        default: ''
        required: false
      pull_request_number:
        type: string
        description: The corresponding PR number if event = pull_request
        default: ''
        required: false

jobs:

######################
###### Linux #########
######################

  Linux:
    name: üêß ${{ matrix.os.description }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [
          { description: Debian Bullseye (x86_64),                 platform: x11,     architecture: [ amd64-qt6,   linux/amd64  ] },
          { description: Debian Bullseye (Raspberry Pi v1 & ZERO), platform: rpi,     architecture: [ armv6-qt6,   linux/arm/v5 ] },
          { description: Debian Bullseye (Raspberry Pi 2/3/4),     platform: rpi,     architecture: [ armv7-qt6,   linux/arm/v7 ] },
          { description: Debian Bullseye (Generic AARCH64),        platform: amlogic, architecture: [ aarch64-qt6, linux/arm64  ] }
        ]
        include:
          - distribution: debian
          - codename: bullseye-qt6

    steps:
      - name: ‚¨á Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: üîß Prepare PR
        if: ${{ inputs.event_name == 'pull_request' }}
        shell: bash
        run: |
          echo '::group::Append PR number to version'
            tr -d '\n' < .version > temp && mv temp .version
            echo -n "+PR${{ inputs.pull_request_number }}" >> .version
          echo '::endgroup::'

      - name: üõ†Ô∏è Setup QEMU
        if: ${{ matrix.os.architecture[0] != 'amd64-qt6' }}
        uses: docker/setup-qemu-action@v3

      - name: üë∑ Build
        shell: bash
        run: |
          echo '::group::Build Hyperion'
            ./.github/scripts/build.sh
          echo '::endgroup::'
        env:
          DOCKER_IMAGE: ${{ matrix.distribution }}
          DOCKER_TAG: ${{ matrix.codename }}
          PLATFORM: ${{ matrix.os.platform }}
          TARGET_ARCH: ${{ matrix.os.architecture[1] }}

      - name: üì¶ Upload
        if: ${{ inputs.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os.architecture[0] }}
          path: 'deploy/*.tar.gz'

######################
###### macOS #########
######################

  macOS:
    name: üçè macOS
    runs-on: macos-latest
    steps:
      - name: ‚¨á Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: üîß Prepare PR
        if: ${{ inputs.event_name == 'pull_request' }}
        shell: bash
        run: |
          echo '::group::Append PR number to version'
            tr -d '\n' < .version > temp && mv temp .version
            echo -n "+PR${{ inputs.pull_request_number }}" >> .version
          echo '::endgroup::'

      - name: üë∑ Build
        shell: bash
        run: |
          echo '::group::Update/Install dependencies'
            brew update || true
            brew install --overwrite qt6 libusb
            brew link --overwrite --force qt6
          echo '::endgroup::'

          echo '::group::Build packages'
            ./.github/scripts/build.sh
          echo '::endgroup::'
        env:
          PLATFORM: osx

      - name: üì¶ Upload
        if: ${{ inputs.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v3
        with:
          name: 'macOS-qt6'
          path: 'build/Hyperion-*'

######################
###### Windows #######
######################

  windows:
    name: ü™ü Windows
    runs-on: windows-2022
    env:
      VCINSTALLDIR: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC'
      QT_VERSION: 6.5.2
    steps:
      - name: ‚¨á Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: üîß Prepare PR
        if: ${{ inputs.event_name == 'pull_request' }}
        shell: bash
        run: |
          echo '::group::Append PR number to version'
            tr -d '\n' < .version > temp && mv temp .version
            echo -n "+PR${{ inputs.pull_request_number }}" >> .version
          echo '::endgroup::'

      - name: üíæ Cache/Restore
        uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\AppData\Local\Temp\chocolatey
          key: ${{ runner.os }}-chocolatey-qt6

      - name: üì• Install OpenSSL, DirectX SDK, libjpeg-turbo
        shell: powershell
        run: |
          choco install --no-progress openssl vulkan-sdk directx-sdk -y
          Invoke-WebRequest https://netcologne.dl.sourceforge.net/project/libjpeg-turbo/3.0.1/libjpeg-turbo-3.0.1-vc64.exe -OutFile libjpeg-turbo.exe -UserAgent NativeHost
          .\libjpeg-turbo /S

      - name: üì• Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{env.QT_VERSION}}
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          modules: 'qtserialport'
          cache: 'true'
          cache-key-prefix: 'cache-qt6-windows'

      - name: üõ†Ô∏è Setup MSVC
        shell: cmd
        run: call "${{env.VCINSTALLDIR}}\Auxiliary\Build\vcvars64.bat"

      - name: üë∑ Build
        shell: bash
        run: |
          echo '::group::Build packages'
            ./.github/scripts/build.sh
          echo '::endgroup::'
        env:
          PLATFORM: windows

      - name: üì¶ Upload
        if: ${{ inputs.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v3
        with:
          name: 'windows'
          path: 'build/*.exe'
