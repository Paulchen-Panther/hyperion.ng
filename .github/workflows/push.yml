name: Hyperion CI Build
on:
  push:
    branches:
      - '**'
    tags:
      - '*'

jobs:

###################
###### macOS ######
###################

  macOS:
    name: macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install dependencies
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
        run: |
          brew install ccache cmake ninja

      - name: Enable vcpkg cache
        uses: actions/cache@v3
        with:
          path: $VCPKG_INSTALLATION_ROOT/installed
          key: vcpkg-installed-${{ env.VCPKG_DEFAULT_TRIPLET }}-${{ github.ref }}-${{ github.run_number }}
          restore-keys: |
            vcpkg-installed-${{ env.VCPKG_DEFAULT_TRIPLET }}-${{ github.ref }}-
            vcpkg-installed-${{ env.VCPKG_DEFAULT_TRIPLET }}-

      - name: Prepare vcpkg
        run: |
          vcpkg install \
            qt5:x64-osx qt5:arm64-osx \
            python:x64-osx python:arm64-osx \
            libusb:x64-osx libusb:arm64-osx

      - name: Set up gcc/clang problem matcher
        uses: ammaraskar/gcc-problem-matcher@master

      - name: Configure
        run: |
          mkdir build && cd build
          cmake -B build \
            -DPLATFORM=osx \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -DCMAKE_SYSTEM_PROCESSOR=arm64 \
            -DCMAKE_SYSTEM_NAME=Darwin \
            -DVCPKG_TARGET_TRIPLET=arm64-osx-release \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_INSTALL_PREFIX:PATH=/usr/local ../


      - name: Build
        run: |
          cmake --build build -j $(sysctl -n hw.logicalcpu) package

      # Upload artifacts (only on tagged commit)
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: build/Hyperion-*
